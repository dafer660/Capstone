{"version":3,"sources":["components/UI/Pages/Pages.module.css","components/UI/Pages/Header/Header.module.css","components/UI/Pages/Main/Main.module.css","hoc/Layout/Layout.module.css","components/UI/Navigation/Footer/Footer.module.css","hoc/Loading/Loading.module.css","reportWebVitals.js","components/Logo/Logo.js","components/UI/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Auth/Login/Login.js","components/Auth/Logout/Logout.js","components/UI/Navigation/NavigationItems/NavigationItems.js","components/UI/Navigation/Toolbar/Toolbar.js","hoc/Auxiliary/Auxiliary.js","components/UI/Pages/Pages.js","components/UI/Pages/Header/Header.js","components/UI/Pages/Main/Main.js","assets/svg/udacity.svg","assets/svg/github.svg","assets/img/toast.png","components/UI/Pages/Content/Homepage/Homepage.js","components/UI/Pages/Content/Actors/Actor/Actor.js","components/UI/Pages/Content/Actors/Actors.js","components/UI/Pages/Content/Movies/Movie/Movie.js","components/UI/Pages/Content/Movies/Movies.js","assets/img/DanielFerreira_Image.jpg","components/UI/Pages/Content/About/About.js","components/UI/Navigation/Footer/Footer.js","assets/svg/linkedin.svg","hoc/Layout/Layout.js","components/Forms/FormActors/FormActor.js","components/Forms/FormMovies/FormMovie.js","components/Forms/FormAgents/FormAgent.js","components/UI/Pages/Content/Agents/Agent/Agent.js","components/UI/Pages/Content/Agents/Agents.js","hoc/Loading/Loading.js","components/Auth/ProtectedRoute/ProtectedRoute.js","components/Forms/FormCategories/FormCategory.js","components/UI/Pages/Content/Categories/Category/Category.js","components/UI/Pages/Content/Categories/Categories.js","App.js","index.js","components/UI/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Pages/Content/Actors/Actors.module.css","components/UI/Pages/Content/Movies/Movie/Movie.module.css","components/UI/Pages/Content/Movies/Movies.module.css","components/UI/Pages/Content/Agents/Agents.module.css","components/UI/Pages/Content/Categories/Categories.module.css","components/UI/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Pages/Content/Actors/Actor/Actor.module.css","components/UI/Pages/Content/About/About.module.css","components/UI/Pages/Content/Agents/Agent/Agent.module.css","components/UI/Pages/Content/Homepage/Homepage.module.css","components/Forms/FormMovies/FormMovie.module.css","components/UI/Navigation/Toolbar/Toolbar.module.css","components/Forms/FormActors/FormActor.module.css","components/Forms/FormAgents/FormAgent.module.css","components/Forms/FormCategories/FormCategory.module.css","components/UI/Pages/Content/Categories/Category/Category.module.css","components/Logo/Logo.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Logo","props","className","styleLogo","to","src","alt","NavigationItem","item","this","renderItem","styleNavItem","Menu","activeClassName","active","url","children","onClick","React","Component","LoginButton","useAuth0","isAuthenticated","loginWithPopup","exact","e","a","preventDefault","returnTo","window","location","origin","LogoutButton","logout","NavigationItems","handleClick","event","setState","anchor","currentTarget","handleClose","state","auth0","styleNavItems","id","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","Login","Logout","withAuth0","Toolbar","styleToolbar","Auxiliary","Pages","classes","Container","Header","Main","Homepage","HomepageHeader","href","aria-label","udacityLogo","HomepageMain","title","target","rel","githubLogo","Beer","beerIcon","Actor","name","age","gender","joined_in","agent","final_name","toString","toUpperCase","substring","toLowerCase","ActorImage","ActorDate","Moment","format","ActorAgent","Icons","IconButton","handleDelete","disabled","canDelete","color","fontSize","canEdit","editActor","Actors","reason","handleOpen","severity","severityMessage","handlePageClick","data","selected","offset","Math","ceil","currentPage","getActors","handleUpdate","payload","token","sessionStorage","getItem","handleGetPayload","handleCan","fetch","method","headers","Authorization","response","ok","json","updateActor","actor","catch","error","console","log","message","confirm","status","allActors","actors","totalActors","total_actors","pageCount","total_movies","deleted","latestActors","currentActors","user","permissions","prevProps","prevState","snapshot","setItem","handleToken","Snackbar","autoHideDuration","Alert","variant","ActorsHeader","ActorsMain","map","key","idx","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","Paginate","previousClassName","PaginateLink","nextClassName","pageClassName","disabledClassName","PaginateDisabled","PaginateActive","Movie","release_date","rating","categories","final_title","MovieTitle","MovieYear","MovieRating","length","k","MovieSpan","editMovie","Movies","process","allMovies","movies","totalMovies","getMovies","latestMovies","currentMovies","MoviesHeader","MoviesMain","About","AboutHeader","AboutMain","AboutImg","img","AboutInfo","AboutBeer","beer","Footer","scrollTo","top","behavior","scrollToTop","Layout","Content","FormActor","handleChange","value","validateField","getAllAgents","allAgents","agents","totalAgents","total_agents","getActor","handleActor","ev","formUpdate","document","getElementsByName","agent_id","getElementById","innerText","requestOptions","body","JSON","stringify","result","history","push","formValid","formCreate","formErrors","nameValid","ageValid","joined_inValid","match","params","fieldName","fieldValidationErrors","isNaN","parseInt","Date","parse","validateForm","type","onChange","TextField","InputLabelProps","shrink","display","Button","fullWidth","size","withRouter","FormMovie","movie","getAllActors","getMovie","getAllCategories","allCategories","totalCategories","total_categories","handleMovie","titleValid","ratingValid","release_dateValid","actorsValid","categoriesValid","Array","fill","_","i","Select","labelId","multiple","input","Input","renderValue","join","Checkbox","checked","indexOf","ListItemText","primary","FormAgent","getAgent","alert","handleAgent","Agent","AgentImage","AgentDate","editAgent","Agents","getAgents","AgentsHeader","AgentsMain","Loading","Spinner","ProtectedRoute","component","args","withAuthenticationRequired","onRedirecting","FormCategory","category","getCategory","handleCategory","Category","editCategory","Categories","getCategories","updateCategory","CategoriesHeader","CategoriesMain","App","handleGetToken","getAccessTokenSilently","jwtDecode","permission","isLoading","path","render","pathname","ReactDOM","domain","clientId","redirectUri","audience"],"mappings":"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","file":"static/js/main.be002086.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Pages_Container__3rUq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3V4bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__1y10M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3djzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3C9DB\",\"active\":\"Footer_active__hV1dZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loading_Spinner__2WsDQ\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nimport iconLogo from '../../assets/favicon/android-chrome-192x192.png'\nimport styleLogo from './Logo.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Logo = (props) => {\n    return (\n        <div className={styleLogo.Logo}>\n            <NavLink to={'/'}>\n                <img src={''} alt=\"Homepage\"/>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Logo","import React from 'react'\n\nimport styleNavItem from './NavigationItem.module.css'\nimport {NavLink} from \"react-router-dom\";\nimport {Button} from \"@material-ui/core\";\n\nclass NavigationItem extends React.Component {\n    render() {\n        let item\n\n        switch (this.props.renderItem) {\n            case 'menuItem':\n                item = (\n                    <NavLink\n                        className={styleNavItem.Menu}\n                        activeClassName={styleNavItem.active}\n                        to={this.props.url}>\n                        {this.props.children}\n                    </NavLink>\n                )\n                break;\n            case 'menuAdm':\n                item = (\n                    <a\n                        onClick={this.props.onClick}>\n                        {this.props.children}\n                    </a>\n                )\n                break;\n            default:\n                item = (\n                    <NavLink\n                        activeClassName={styleNavItem.active}\n                        to={this.props.url}>\n                        {this.props.children}\n                    </NavLink>\n                )\n                break;\n        }\n\n        return (\n            <li className={styleNavItem.NavigationItem}>\n                {item}\n            </li>\n        )\n    }\n}\n\nexport default NavigationItem","import React from 'react';\nimport {useAuth0} from '@auth0/auth0-react';\nimport styleNavItem from \"../../UI/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction LoginButton() {\n    const {\n        isAuthenticated,\n        loginWithPopup,\n    } = useAuth0();\n\n    return !isAuthenticated && (\n        <li className={styleNavItem.NavigationItem}>\n            <NavLink\n                exact to={'/'}\n                onClick={async (e) => {\n                    e.preventDefault()\n                    await loginWithPopup({returnTo: window.location.origin});\n                }}>\n                Log in\n            </NavLink>\n        </li>\n    );\n}\n\nexport default LoginButton;","import React from 'react';\nimport {useAuth0} from '@auth0/auth0-react';\nimport styleNavItem from \"../../UI/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nfunction LogoutButton() {\n    const {\n        isAuthenticated,\n        logout,\n    } = useAuth0();\n\n    return isAuthenticated && (\n        <li className={styleNavItem.NavigationItem}>\n            <NavLink exact to={'/'} onClick={(e) => {\n                e.preventDefault()\n                logout({returnTo: window.location.origin});\n            }}>Log out\n            </NavLink>\n        </li>\n\n    );\n}\n\nexport default LogoutButton;","import {Component} from 'react'\nimport {withAuth0} from \"@auth0/auth0-react\";\n\nimport styleNavItems from './NavigationItems.module.css'\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport LoginButton from \"../../../Auth/Login/Login\";\nimport LogoutButton from \"../../../Auth/Logout/Logout\";\nimport {Menu, MenuItem} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\n\nclass NavigationItems extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchor: null\n        }\n    }\n\n    handleClick = (event) => {\n        this.setState({\n            anchor: event.currentTarget\n        })\n    }\n\n    handleClose = () => {\n        this.setState({\n            anchor: null\n        })\n    }\n\n    render() {\n\n        const {isAuthenticated} = this.props.auth0\n\n        return (\n            <ul className={styleNavItems.NavigationItems}>\n\n                {isAuthenticated ?\n                    <>\n                        <NavigationItem renderItem={'menuAdm'} onClick={this.handleClick}>\n                            Data\n                        </NavigationItem>\n                        <Menu\n                            id=\"NavbarMenu\"\n                            anchorEl={this.state.anchor}\n                            keepMounted\n                            open={Boolean(this.state.anchor)}\n                            onClose={this.handleClose}\n                            className={styleNavItems.Menu}\n                        >\n                            <NavLink to={'/actors'} activeClassName={styleNavItems.active}>\n                                <MenuItem onClick={this.handleClose}>Actors</MenuItem>\n                            </NavLink>\n                            <NavLink to={'/agents'} activeClassName={styleNavItems.active}>\n                                <MenuItem onClick={this.handleClose}>Agents</MenuItem>\n                            </NavLink>\n                            <NavLink to={'/categories'} activeClassName={styleNavItems.active}>\n                                <MenuItem onClick={this.handleClose}>Categories</MenuItem>\n                            </NavLink>\n                            <NavLink to={'/movies'} activeClassName={styleNavItems.active}>\n                                <MenuItem onClick={this.handleClose}>Movies</MenuItem>\n                            </NavLink>\n                        </Menu>\n                    </> : ''}\n                <NavigationItem url={'/about'}>About\n                </NavigationItem>\n                <LoginButton>\n                    Login\n                </LoginButton>\n                <LogoutButton>\n                    Logout\n                </LogoutButton>\n            </ul>\n        )\n    }\n\n}\n\nexport default withAuth0(NavigationItems);","import React from 'react'\n\nimport styleToolbar from './Toolbar.module.css'\n\nimport Logo from \"../../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\n\nconst Toolbar = (props) => {\n\n    return (\n        <header className={styleToolbar.Toolbar}>\n            <div className={styleToolbar.Logo}><Logo/></div>\n            <nav>\n                <NavigationItems/>\n            </nav>\n        </header>\n    )\n}\n\nexport default Toolbar;","// import React from 'react'\n\nconst Auxiliary = (props) => props.children;\n\nexport default Auxiliary\n","import {Component} from 'react'\nimport classes from './Pages.module.css'\n\nclass Pages extends Component {\n    render() {\n        return (\n            <div className={classes.Container}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Pages","import {Component} from 'react'\nimport classes from './Header.module.css'\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <div className={classes.Header}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Header","import {Component} from 'react'\nimport classes from './Main.module.css'\n\nclass Main extends Component {\n\n    render() {\n        return (\n            <div className={classes.Main}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\n\nexport default Main","export default __webpack_public_path__ + \"static/media/udacity.02489ad2.svg\";","export default __webpack_public_path__ + \"static/media/github.22e65707.svg\";","export default __webpack_public_path__ + \"static/media/toast.93743590.png\";","import React, {Component} from 'react'\n\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\n\nimport classes from './Homepage.module.css'\n\nimport udacityLogo from '../../../../../assets/svg/udacity.svg'\nimport githubLogo from '../../../../../assets/svg/github.svg'\nimport beerIcon from '../../../../../assets/img/toast.png'\n\nclass Homepage extends Component {\n\n    render() {\n        const udacityURL = \"https://www.udacity.com\"\n        const udacityFSWD = \"https://www.udacity.com/course/full-stack-web-developer-nanodegree--nd0044\"\n        const reactURL = \"https://reactjs.org/\"\n        const flaskURL = \"https://flask.palletsprojects.com/en/2.0.x/\"\n        const repoURL = \"https://github.com/dafer660/Capstone\"\n\n        return (\n            <Pages>\n                <Header>\n                    <div className={classes.HomepageHeader}>\n                        <a href={udacityURL} aria-label=\"Udacity Capstone\"><img src={udacityLogo} alt=\"...\"/></a>\n                        <h2>Udacity Capstone Project - Full Stack Web Developer</h2>\n                        <h3>Casting Agency</h3>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.HomepageMain}>\n                        <p>This project is based on <span>\n                        <a href=\"https://www.udacity.com\"\n                           title=\"Udacity.com\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\">Udacity\n                        </a></span> Capstone from the Program <span>\n                        <a href={udacityFSWD}\n                           title=\"Udacity FSWD Program\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\">Full Stack Web Developer\n                        </a></span>.\n                        </p>\n                        <p>It was made using <span>\n                        <a href={reactURL}\n                           title=\"reactjs.org\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\">ReactJS\n                        </a></span>, as the frontend, and <span>\n                        <a href={flaskURL}\n                           title=\"flask project\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\">Flask\n                        </a></span>, as the backend.</p>\n                        <p>The overall program was really cool and allowed me to learn a few things along the way.</p>\n                        <p>\n                            <a href={repoURL}\n                               title=\"Capstone Github Repository\"\n                               target=\"_blank\"\n                               rel=\"noopener noreferrer\"><span>You can check the repo of this project here <img\n                                src={githubLogo}/></span>\n                            </a>\n                        </p>\n                        <hr/>\n                        <p><img className={classes.Beer} src={beerIcon} alt=\"beer\"/></p>\n                    </div>\n\n                </Main>\n            </Pages>\n\n        )\n    }\n}\n\nexport default Homepage","import {Component} from 'react'\nimport {Link} from \"react-router-dom\";\nimport Moment from 'moment'\n\nimport classes from \"./Actor.module.css\"\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport class Actor extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {name, age, gender, joined_in, agent} = this.props;\n        const final_name = name.toString()[0].toUpperCase() +\n            name.toString().substring(1).toLowerCase()\n        return (\n            <tr className={classes.Actor}>\n                <td className={classes.ActorImage}><img\n                    src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y\" alt=\"image\"/></td>\n                <td>{final_name}</td>\n                <td>{age}</td>\n                <td>{gender}</td>\n                <td><span className={classes.ActorDate}>{Moment(joined_in).format('DD MMMM YYYY')}</span></td>\n                <td className={classes.ActorAgent}><span>{\n                    agent != null ? agent :\n                        <span>Not represented by any Agent</span>}</span></td>\n                <td className={classes.Icons}>\n                    <IconButton onClick={this.props.handleDelete} disabled={!this.props.canDelete}>\n                        <a>\n                            <DeleteIcon color={!this.props.canDelete ? 'disabled' : 'primary'} fontSize=\"small\"/>\n                        </a>\n                    </IconButton>\n                    <IconButton disabled={!this.props.canEdit}>\n                        <Link to={'edit/actor/' + this.props.editActor}>\n                            <EditIcon color={!this.props.canEdit ? 'disabled' : 'primary'} fontSize=\"small\"/>\n                        </Link>\n                    </IconButton>\n                </td>\n            </tr>\n        )\n    }\n\n}\n\nexport default Actor;","import React, {Component} from 'react'\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\nimport Actor from \"./Actor/Actor\";\nimport classes from \"./Actors.module.css\"\n\nimport ReactPaginate from \"react-paginate\"\nimport {Link} from \"react-router-dom\";\nimport {Snackbar} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport class Actors extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allActors: [],\n            latestActors: [],\n            currentActors: [],\n            updateActor: [],\n            currentPage: 1,\n            totalActors: 0,\n            pageCount: 0,\n            offset: 0,\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getActors()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.state.totalActors !== prevState.totalActors) {\n            this.getActors();\n        }\n\n        if (prevProps.user !== this.state.user && this.props.user !== this.state.user) {\n            this.setState({\n                user: this.props.user\n            })\n        }\n\n        if (sessionStorage.getItem('token') !== this.props.token) {\n            sessionStorage.setItem('token', this.props.token)\n        }\n\n        if (prevProps.permissions !== this.state.permissions) {\n            this.setState({\n                permissions: this.props.permissions\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handlePageClick = (data) => {\n        let selected = data.selected;\n        // let offset = Math.ceil(selected * this.props.perPage);\n        let offset = Math.ceil(selected * 10);\n\n        this.setState({offset: offset, currentPage: selected + 1}, () => {\n            this.getActors();\n        });\n    }\n\n    handleUpdate = (id) => {\n        // permission: 'patch:actors'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('patch:actors', payload)\n        if (permissions) {\n            // fetch(`http://localhost:5000/actor/${id}`, {\n            fetch(`/actor/${id}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        updateActor: json.actor\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    handleDelete = (id) => {\n        // permission: 'delete:actors'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('delete:actors', payload)\n        if (permissions) {\n            if (window.confirm('are you sure you want to delete the selected Agent?')) {\n                fetch(`/actor/${id}`, {\n                    // fetch(`http://localhost:5000/actor/${id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                    }\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json();\n                        }\n                    })\n                    .then((json) => {\n                        this.setState({\n                            allActors: json.actors,\n                            totalActors: json.total_actors,\n                            pageCount: Math.ceil(json.total_movies / 10)\n                        })\n                        this.handleOpen('success', `Actor ${json.deleted.name} has been deleted.`);\n                    })\n                    .catch((error) => {\n                        console.log(error.message)\n                        this.handleOpen('error', 'An error has occurred.');\n                        return;\n                    })\n            }\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n\n    }\n\n    getActors = () => {\n        // permission: 'get:actors'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:actors', payload)\n\n        if (permissions) {\n            fetch(`/actors?page=${this.state.currentPage}&limit=${10}&offset=${this.state.offset}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allActors: json.actors,\n                        totalActors: json.total_actors,\n                        pageCount: Math.ceil(json.total_actors / 10)\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        this.props.handleToken().then((response => {\n            if (sessionStorage.getItem('token') !== response) {\n                sessionStorage.setItem('token', response)\n            }\n        }))\n\n        const payload = this.props.handleGetPayload(sessionStorage.getItem('token'))\n\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.ActorsHeader}>\n                        <h2>Actors\n                            {this.props.handleCan('post:actors', payload) ?\n                                <Link to={\"/new-actor\"} title={'Add an Actor'}>\n                                    &#43;\n                                </Link> :\n                                ''}\n                        </h2>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.ActorsMain}>\n                        <div>\n                            {this.state.totalActors > 0 ? (\n                                    <table>\n                                        <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>Name</th>\n                                            <th>Age</th>\n                                            <th>Gender</th>\n                                            <th>Joined in</th>\n                                            <th>Agent</th>\n                                            <th></th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.allActors.map((key, idx) => (\n                                            <Actor\n                                                key={key.id}\n                                                name={key.name}\n                                                age={key.age}\n                                                gender={key.gender}\n                                                joined_in={key.joined_in}\n                                                agent={key.agent}\n                                                editActor={key.id}\n                                                handleDelete={() => this.handleDelete(key.id)}\n                                                canDelete={this.props.handleCan('delete:actors', payload)}\n                                                canEdit={this.props.handleCan('patch:actors', payload)}\n                                            />\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                ) :\n                                <p>There are no Actors to display</p>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        {this.state.totalActors > 10 ? <ReactPaginate\n                            previousLabel={'← Previous'}\n                            nextLabel={'Next →'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={classes.Paginate}\n                            previousClassName={classes.PaginateLink}\n                            nextClassName={classes.PaginateLink}\n                            pageClassName={classes.PaginateLink}\n                            disabledClassName={classes.PaginateDisabled}\n                            activeClassName={classes.PaginateActive}\n                        /> : null}\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default Actors;","import {Component} from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport Moment from 'moment'\n\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport classes from \"./Movie.module.css\"\n\nexport class Movie extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {title, release_date, rating, categories} = this.props;\n        const final_title = title.toString()[0].toUpperCase() +\n            title.toString().substring(1).toLowerCase()\n        return (\n            <tr className={classes.Movie}>\n                <td className={classes.MovieTitle}><img\n                    src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y\" alt=\"image\"/></td>\n                <td className={classes.MovieTitle}>{final_title}<span\n                    className={classes.MovieYear}>({Moment(release_date).format('YYYY')})</span></td>\n                <td className={classes.MovieRating}>&#11088; {rating}</td>\n                <td className={classes.MovieRating}>{categories.length > 0 ? categories.map((k, idx) => (\n                    <p className={classes.MovieSpan} key={idx}>{k}</p>\n                )) : <p className={classes.MovieSpan}>&#8709;</p>}</td>\n                <td>\n                    <IconButton onClick={this.props.handleDelete} disabled={!this.props.canDelete}>\n                        <a>\n                            <DeleteIcon\n                                color={!this.props.canDelete ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </a>\n                    </IconButton>\n                    <IconButton disabled={!this.props.canEdit}>\n                        <Link to={'edit/movie/' + this.props.editMovie}>\n                            <EditIcon\n                                color={!this.props.canEdit ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </Link>\n                    </IconButton>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default Movie;","import React, {Component} from 'react'\nimport ReactPaginate from \"react-paginate\";\nimport {Link} from \"react-router-dom\";\n\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\nimport Movie from \"./Movie/Movie\";\n\nimport classes from \"./Movies.module.css\";\nimport Alert from '@material-ui/lab/Alert';\nimport {Snackbar} from \"@material-ui/core\";\n\nexport class Movies extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allMovies: [],\n            latestMovies: [],\n            currentMovies: [],\n            currentPage: 1,\n            totalMovies: 0,\n            pageCount: 0,\n            offset: 0,\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getMovies()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.totalMovies !== this.state.totalMovies) {\n            this.getMovies();\n        }\n\n        if (prevProps.user !== this.state.user && this.props.user !== this.state.user) {\n            this.setState({\n                user: this.props.user\n            })\n        }\n\n        if (sessionStorage.getItem('token') !== this.props.token) {\n            sessionStorage.setItem('token', this.props.token)\n        }\n\n        if (prevProps.permissions !== this.state.permissions) {\n            this.setState({\n                permissions: this.props.permissions\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handleDelete = (id) => {\n        // permission: 'delete:movies'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('delete:movies', payload)\n        if (permissions) {\n            if (window.confirm('are you sure you want to delete the selected Movie?')) {\n                fetch(`${process.env.REACT_APP_API_URI}/movie/${id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                    }\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json();\n                        }\n                    })\n                    .then((json) => {\n                        this.setState({\n                            allMovies: json.movies,\n                            totalMovies: json.total_movies,\n                            pageCount: Math.ceil(json.total_movies / 10)\n                        })\n                        this.handleOpen('success', `Movie ${json.deleted.title} has been deleted.`);\n                    })\n                    .catch((error) => {\n                        return;\n                    })\n            }\n        } else {\n            this.handleOpen('error', 'No permissions to delete a Movie.');\n        }\n    }\n\n    handlePageClick = (data) => {\n        let selected = data.selected;\n        // let offset = Math.ceil(selected * this.props.perPage);\n        let offset = Math.ceil(selected * 10);\n\n        this.setState({offset: offset, currentPage: selected + 1}, () => {\n            this.getMovies();\n        });\n    };\n\n    getMovies = () => {\n        // permission: 'get:movies'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:movies', payload)\n\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/movies?page=${this.state.currentPage}&limit=${10}&offset=${this.state.offset}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allMovies: json.movies,\n                        totalMovies: json.total_movies,\n                        pageCount: Math.ceil(json.total_movies / 10)\n                    })\n                })\n                .catch((error) => {\n                    this.handleOpen('error', 'An error has occurred.');\n                    console.log(error.message)\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        this.props.handleToken().then((response => {\n            if (sessionStorage.getItem('token') !== response) {\n                sessionStorage.setItem('token', response)\n            }\n        }))\n\n        const payload = this.props.handleGetPayload(sessionStorage.getItem('token'))\n\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.MoviesHeader}>\n                        <h2>Movies\n                            {this.props.handleCan('post:movies', payload) ?\n                                <Link to={\"/new-movie\"} title={'Add a Movie'}>\n                                    &#43;\n                                </Link> :\n                                ''}\n                        </h2>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.MoviesMain}>\n                        <div>\n                            {this.state.totalMovies > 0 ? (\n                                    <table>\n                                        <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>Title</th>\n                                            <th>Rating</th>\n                                            <th>Categories</th>\n                                            <th></th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.allMovies.map((key, idx) => (\n                                            <Movie\n                                                key={key.id}\n                                                title={key.title}\n                                                release_date={key.release_date}\n                                                rating={key.rating}\n                                                categories={key.categories}\n                                                editMovie={key.id}\n                                                handleDelete={() => this.handleDelete(key.id)}\n                                                canDelete={this.props.handleCan('delete:movies', payload)}\n                                                canEdit={this.props.handleCan('patch:movies', payload)}\n                                            />\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                ) :\n                                <p>There are no Movies to display</p>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        {this.state.totalMovies > 10 ? <ReactPaginate\n                            previousLabel={'← Previous'}\n                            nextLabel={'Next →'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={classes.Paginate}\n                            previousClassName={classes.PaginateLink}\n                            nextClassName={classes.PaginateLink}\n                            pageClassName={classes.PaginateLink}\n                            disabledClassName={classes.PaginateDisabled}\n                            activeClassName={classes.PaginateActive}\n                        /> : null}\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default Movies;","export default __webpack_public_path__ + \"static/media/DanielFerreira_Image.b8d0c3b0.jpg\";","import React, {Component} from 'react'\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\nimport classes from \"./About.module.css\";\n\nimport img from \"../../../../../assets/img/DanielFerreira_Image.jpg\"\nimport beer from \"../../../../../assets/img/toast.png\"\n\nimport {Link} from \"react-router-dom\";\n\nclass About extends Component {\n    render() {\n        return (\n            <Pages>\n                <Header>\n                    <div className={classes.AboutHeader}>\n                        <h2>About me</h2>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.AboutMain}>\n                        <div className={classes.AboutImg}>\n                            <img src={img} alt={'image'}/>\n                        </div>\n                        <div className={classes.AboutInfo}>\n                            <p>\n                                Hi! I'm Daniel! This was a website developed to complete the Udacity Capstone project\n                                using <span>ReactJS</span> and <span>Python</span>.\n                            </p>\n                            <p>\n                                Here you can check my <span>\n                                    <a href={'https://www.linkedin.com/in/daniel-f-684b3666'}\n                                       title={'LinkedIn Profile'}\n                                       target=\"_blank\"\n                                       rel=\"noopener noreferrer\">\n                                    LinkedIn profile\n                                    </a>\n                                </span> and my <span>\n                                    <a href={'https://github.com/dafer660'}\n                                       title={'Github Profile'}\n                                       target=\"_blank\"\n                                       rel=\"noopener noreferrer\">\n                                    Github profile\n                                    </a>\n                                </span> as well.\n                            </p>\n                            <p>\n                                A little bit about me...\n                            </p>\n                            <p>\n                                I really like <span>System Administration</span>,\n                                using <span>Linux</span> or <span>Windows</span>,however, I tend to go with Linux for\n                                servers rather than Windows. Typically, I like to use <span>Proxmox</span>, since I do\n                                have a homelab setup with it, and so far, I am really enjoying the experience.\n                                Out of the box it has some great tools and allows you to scale as well.\n                            </p>\n                            <p>\n                                In regards to web development, I am still very \"green\", but I like to play\n                                with <span>ReactJS</span> and <span>Flask</span>, as those are my two go tools.\n                                For <span>Databases</span>, I find it easy with <span>Postgres</span> and <span>MySQL</span> or <span>MariaDB</span>.\n                            </p>\n                            <p>\n                                I still have a lot to learn, but I am willing to put the work in.\n                            </p>\n\n                            <p>\n                                Thank you for having the time to read this section and feel free to contact me anytime!\n                            </p>\n\n                            <p>\n                                Cheers...! <img className={classes.AboutBeer} src={beer} alt={'beer'}/>\n                            </p>\n                        </div>\n                    </div>\n                    <a href={\"https://www.linkedin.com/in/daniel-f-684b3666\"}\n                       title={'LinkedIn Profile'}\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                    </a>\n\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default About;","import {Component} from 'react'\nimport classes from \"./Footer.module.css\"\nimport {Link} from \"react-router-dom\";\nimport github from \"../../../../assets/svg/github.svg\"\nimport linkedin from \"../../../../assets/svg/linkedin.svg\"\n\nclass Footer extends Component {\n\n    scrollToTop(e) {\n        e.preventDefault()\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    render() {\n        return (\n            <footer className={classes.Footer}>\n                <Link to=\"#\" onClick={(e) => this.scrollToTop(e)}>Back to top</Link>\n                <span>2021, Daniel Ferreira LLC\n                    {/*<span><a href={''}><img src={github}/></a></span>*/}\n                    {/*<span> </span>*/}\n                    {/*<span><a href={''}><img src={linkedin}/></a></span>*/}\n                </span>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/linkedin.2eda7bdd.svg\";","import React, {Component} from 'react'\nimport Auxiliary from \"../Auxiliary/Auxiliary\";\nimport classes from \"./Layout.module.css\"\nimport Footer from \"../../components/UI/Navigation/Footer/Footer\";\n\nclass Layout extends Component {\n    render() {\n        return (\n            <Auxiliary>\n                <div className={classes.Content}>\n                    <main>\n                        {this.props.children}\n                    </main>\n                    <Footer/>\n                </div>\n            </Auxiliary>\n        )\n    }\n}\n\nexport default Layout\n","import React, {Component} from \"react\";\nimport Header from \"../../UI/Pages/Header/Header\";\nimport Main from \"../../UI/Pages/Main/Main\";\nimport Pages from \"../../UI/Pages/Pages\";\nimport classes from \"./FormActor.module.css\";\nimport {Link, withRouter} from \"react-router-dom\";\n\nimport {Button, Snackbar, TextField} from '@material-ui/core';\nimport Moment from \"moment\";\nimport {FormErrors} from \"../Errors/Errors\";\nimport {string} from \"prop-types\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nclass FormActor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            formUpdate: props.formUpdate,\n            formCreate: props.formCreate,\n            formErrors: {name: '', age: '', joined_in: ''},\n            id: null,\n            name: '',\n            nameValid: false,\n            age: 0,\n            ageValid: false,\n            gender: '',\n            joined_in: '',\n            joined_inValid: false,\n            agent: null,\n            actor: {\n                name: '',\n                age: '',\n                gender: '',\n                joined_in: '',\n                agent: '',\n                agent_id: ''\n            },\n            allAgents: [],\n            totalAgents: 0,\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getAllAgents()\n        if (this.props.match && this.props.match.params.id) {\n            this.setState({\n                nameValid: true,\n                ageValid: true,\n                joined_inValid: true,\n                formValid: true,\n                id: this.props.match.params.id\n            })\n            const id = this.props.match.params.id\n            this.getActor(id)\n        }\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n        let ageValid = this.state.ageValid;\n        let joined_inValid = this.state.joined_inValid;\n\n        switch (fieldName) {\n            case 'name':\n                nameValid = value.length > 0;\n                fieldValidationErrors.name = nameValid ? '' : `Name must not be null`;\n                break;\n            case 'age':\n                ageValid = !isNaN(parseInt(value));\n                fieldValidationErrors.age = ageValid ? '' : `Age must be a valid number`;\n                break;\n            case 'joined_in':\n                joined_inValid = !isNaN(Date.parse(value));\n                fieldValidationErrors.joined_in = joined_inValid ? '' : `Date must be valid`;\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            nameValid: nameValid,\n            ageValid: ageValid,\n            joined_inValid: joined_inValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState(\n            {formValid: this.state.nameValid && this.state.ageValid && this.state.joined_inValid}\n        );\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState(prevState => ({\n            actor: {\n                ...prevState.actor, [name]: value\n            }\n        }), () => {\n            this.validateField(name, value)\n        })\n    }\n\n    getAllAgents = () => {\n        // permission: 'get:agents'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:agents', payload)\n        if (permissions) {\n            fetch(`/agents`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allAgents: json.agents,\n                        totalAgents: json.total_agents\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n\n    }\n\n    getActor = (id) => {\n        // permission: 'get:actors'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:actors', payload)\n        if (permissions) {\n            fetch(`/actor/${id}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        actor: json.actor\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    handleActor = (ev) => {\n        ev.preventDefault();\n        let method, url, actor, payload, permissions\n        // permission: 'patch:actors' or 'post:actors'\n        let token = sessionStorage.getItem('token')\n        payload = this.props.handleGetPayload(token)\n\n        if (this.props.formUpdate) {\n            actor = this.state.actor\n            method = 'PATCH'\n            url = `/update/actor/${this.state.id}`\n            permissions = this.props.handleCan('patch:actors', payload)\n        } else {\n            const name = document.getElementsByName('name')[0].value\n            const gender = document.getElementsByName('gender')[0].value\n            const age = document.getElementsByName('age')[0].value\n            const agent_id = document.getElementById('agent_id')[0].value\n            const agent = document.getElementById('agent_id')[0].innerText\n            const joined_in = document.getElementsByName('joined_in')[0].value\n            method = 'POST'\n            url = '/actor'\n            permissions = this.props.handleCan('post:actors', payload)\n            actor = {name, gender, age, agent, joined_in, agent_id}\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body: JSON.stringify(\n                {\n                    name: actor.name,\n                    age: actor.age,\n                    gender: actor.gender,\n                    joined_in: actor.joined_in,\n                    agent: actor.agent,\n                    agent_id: actor.agent_id\n                }\n            )\n        };\n        if (permissions) {\n            fetch(`${url}`, requestOptions)\n                .then((result) => {\n                    if (result.status === 200) {\n                        this.props.history.push('/actors');\n                        return;\n                    }\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.Header}>\n                        {this.props.formCreate ? <h2>Add a New Actor</h2> : <h2>Edit Actor</h2>}\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.FormActor}>\n                        <form id=\"add-actor-form\">\n                            <label>\n                                Name\n                                <input type=\"text\"\n                                       name=\"name\"\n                                       onChange={this.handleChange}\n                                       value={this.state.actor !== null ? this.state.actor.name : ''}/>\n                                {this.state.formErrors.name !== '' ? <p>{this.state.formErrors.name}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Age\n                                <input type=\"text\"\n                                       name=\"age\"\n                                       onChange={this.handleChange}\n                                       value={this.state.actor !== null ? this.state.actor.age : ''}/>\n                                {this.state.formErrors.age !== '' ? <p>{this.state.formErrors.age}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Gender\n                                <select name=\"gender\"\n                                        id={'gender'}\n                                        onChange={this.handleChange}\n                                        value={this.state.actor !== null ? this.state.actor.gender : 'Female'}>\n                                    <option value=\"Female\">Female</option>\n                                    <option value=\"Male\">Male</option>\n                                    <option value=\"Other\">Other</option>\n                                </select>\n                                <p>&nbsp;</p>\n                            </label>\n                            <label>\n                                Agent\n                                <select name=\"agent_id\"\n                                        id={'agent_id'}\n                                        onChange={this.handleChange}\n                                        value={this.state.actor !== null ? this.state.actor.agent_id : ''}>\n                                    {this.state.allAgents.map((key, id) => {\n                                        return (\n                                            <option key={key.id} value={key.id}>{key.name}</option>\n                                        )\n                                    })}\n                                </select>\n                                <p>&nbsp;</p>\n                            </label>\n                            <label>\n                                Joined in\n                                <TextField\n                                    id=\"date\"\n                                    type=\"date\"\n                                    name={'joined_in'}\n                                    onChange={this.handleChange}\n                                    value={this.state.actor !== null ?\n                                        Moment(this.state.actor.joined_in).format('YYYY-MM-DD') :\n                                        Moment(this.state.joined_in).format('YYYY-MM-DD')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                        display: null\n                                    }}\n                                />\n\n                            </label>\n                            {this.state.formErrors.joined_in !== '' ? <p>{this.state.formErrors.joined_in}</p> :\n                                <p>&nbsp;</p>}\n                            <p>&nbsp;</p>\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleActor}\n                                    size=\"large\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </div>\n                </Main>\n            </Pages>\n\n        )\n    }\n}\n\nexport default withRouter(FormActor);","import React, {Component} from \"react\";\nimport Header from \"../../UI/Pages/Header/Header\";\nimport Main from \"../../UI/Pages/Main/Main\";\nimport Pages from \"../../UI/Pages/Pages\";\nimport classes from \"./FormMovie.module.css\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {Button, TextField, Select, MenuItem, Checkbox, ListItemText, Input, Snackbar} from '@material-ui/core';\nimport Moment from \"moment\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nclass FormMovie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            formUpdate: props.formUpdate,\n            formCreate: props.formCreate,\n            formErrors: {title: '', release_date: '', actors: '', categories: ''},\n            id: null,\n            title: '',\n            titleValid: false,\n            rating: '',\n            ratingValid: false,\n            release_date: '',\n            release_dateValid: false,\n            actors: [],\n            actorsValid: false,\n            categories: [],\n            categoriesValid: false,\n            allActors: [],\n            totalActors: 0,\n            allCategories: [],\n            totalCategories: 0,\n            movie: {\n                title: '',\n                release_date: '',\n                categories: [],\n                actors: [],\n                rating: ''\n            },\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getAllActors()\n        this.getAllCategories()\n        if (this.props.match && this.props.match.params.id) {\n            this.setState({\n                titleValid: true,\n                ratingValid: true,\n                release_dateValid: true,\n                actorsValid: true,\n                categoriesValid: true,\n                formValid: true,\n                id: this.props.match.params.id\n            })\n            const id = this.props.match.params.id\n            this.getMovie(id)\n        }\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let titleValid = this.state.titleValid;\n        let release_dateValid = this.state.release_dateValid;\n        let actorsValid = this.state.actorsValid;\n        let categoriesValid = this.state.categoriesValid;\n\n        switch (fieldName) {\n            case 'title':\n                titleValid = value.length > 0;\n                fieldValidationErrors.title = titleValid ? '' : `Title must not be null`;\n                break;\n            case 'release_date':\n                release_dateValid = !isNaN(Date.parse(value));\n                fieldValidationErrors.release_date = release_dateValid ? '' : `Date must be valid`;\n                break;\n            case 'actors':\n                actorsValid = value.length > 0;\n                fieldValidationErrors.actors = actorsValid ? '' : `You must select at least 1 Actor`;\n                break;\n            case 'categories':\n                categoriesValid = value.length > 0;\n                fieldValidationErrors.categories = categoriesValid ? '' : `You must select at least 1 Category`;\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            titleValid: titleValid,\n            release_dateValid: release_dateValid,\n            actorsValid: actorsValid,\n            categoriesValid: categoriesValid,\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState(\n            {\n                formValid: this.state.titleValid && this.state.release_dateValid\n                    && this.state.actorsValid && this.state.categoriesValid\n            }\n        );\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        this.setState(prevState => ({\n            movie: {\n                ...prevState.movie, [name]: value\n            },\n            [name]: value\n        }), () => {\n            this.validateField(name, value)\n        })\n    }\n\n    getAllActors = async () => {\n        // permission: 'get:actors'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:actors', payload)\n\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/actors`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allActors: json.actors,\n                        totalActors: json.total_actors,\n                        pageCount: Math.ceil(json.total_actors / 10)\n                    })\n                })\n                .catch((error) => {\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    getMovie = (id) => {\n        // Population of the field Agents and Categories is buggy, but works...\n        // Need to work on this.\n\n        // permission: 'get:movies'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:movies', payload)\n\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/movie/${id}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        movie: json.movie\n                    })\n                })\n                .catch((error) => {\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    getAllCategories = () => {\n        // permission: 'get:categories'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:categories', payload)\n        if (permissions) {\n            fetch('${process.env.REACT_APP_API_URI}/categories', {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allCategories: json.categories,\n                        totalCategories: json.total_categories\n                    })\n                })\n                .catch((error) => {\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    handleMovie = (ev) => {\n        ev.preventDefault();\n        let method, url, movie, payload, permissions\n        // permission: 'patch:movies' or 'post:movies'\n        let token = sessionStorage.getItem('token')\n        payload = this.props.handleGetPayload(token)\n\n\n        if (this.props.formUpdate) {\n            movie = this.state.movie\n            method = 'PATCH'\n            url = `/update/movie/${this.state.id}`\n            permissions = this.props.handleCan('patch:movies', payload)\n        } else {\n            const title = this.state.title\n            const release_date = this.state.release_date\n            const rating = this.state.rating\n            const actors = this.state.actors\n            const categories = this.state.categories\n            method = 'POST'\n            url = '/movie'\n            permissions = this.props.handleCan('post:movies', payload)\n\n            movie = {title, release_date, rating, actors, categories}\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body: JSON.stringify(\n                {\n                    title: movie.title,\n                    release_date: movie.release_date,\n                    rating: movie.rating,\n                    actors: movie.actors,\n                    categories: movie.categories\n                }\n            )\n        };\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}${url}`, requestOptions)\n                .then((result) => {\n                    if (result.status === 200) {\n                        this.props.history.push('/movies');\n                        return;\n                    }\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n\n    }\n\n    render() {\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.Header}>\n                        <div className={classes.Header}>\n                            {this.props.formCreate ? <h2>Add a New Movie</h2> : <h2>Edit Movie</h2>}\n                        </div>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.FormMovie}>\n                        <form id=\"add-movie-form\">\n                            <label>\n                                Title\n                                <input type=\"text\"\n                                       name=\"title\"\n                                       onChange={this.handleChange}\n                                       value={this.state.movie !== null ? this.state.movie.title : ''}/>\n                                {this.state.formErrors.title !== '' ? <p>{this.state.formErrors.title}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Release Date\n                                <TextField\n                                    id=\"date\"\n                                    type=\"date\"\n                                    name={'release_date'}\n                                    onChange={this.handleChange}\n                                    value={this.state.actor !== null ?\n                                        Moment(this.state.movie.release_date).format('YYYY-MM-DD') :\n                                        Moment(this.state.release_date).format('YYYY-MM-DD')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                        display: null\n                                    }}\n                                />\n                                {this.state.formErrors.release_date !== '' ?\n                                    <p>{this.state.formErrors.release_date}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Rating\n                                <select name=\"rating\"\n                                        onChange={this.handleChange}\n                                        value={this.state.movie !== null ? this.state.movie.rating : ''}>\n                                    {Array(10).fill(1).map((_, i) => {\n                                        return (\n                                            <option key={i + 1} value={i + 1}>{i + 1}</option>\n                                        )\n                                    })}\n                                </select>\n                                <p>&nbsp;</p>\n                            </label>\n                            <label>\n                                Actors\n                                <Select\n                                    labelId=\"actors\"\n                                    id=\"actors\"\n                                    name='actors'\n                                    multiple\n                                    value={this.state.actors}\n                                    onChange={this.handleChange}\n                                    input={<Input/>}\n                                    renderValue={(selected) => (selected.join(', '))}\n                                >\n                                    {this.state.allActors.map((key, id) => {\n                                        return (\n                                            <MenuItem key={key.id} value={key.name}>\n                                                <Checkbox checked={this.state.movie !== null ?\n                                                    this.state.movie.actors.indexOf(key.name) > -1 :\n                                                    this.state.actors.indexOf(key.name) > -1}/>\n                                                <ListItemText primary={key.name}/>\n                                            </MenuItem>\n                                        )\n                                    })}\n                                </Select>\n                                {this.state.formErrors.actors !== '' ? <p>{this.state.formErrors.actors}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Categories\n                                <Select\n                                    labelId=\"categories\"\n                                    id=\"categories\"\n                                    name='categories'\n                                    multiple\n                                    value={this.state.categories}\n                                    onChange={this.handleChange}\n                                    input={<Input/>}\n                                    renderValue={(selected) => (selected.join(', '))}\n                                >\n                                    {this.state.allCategories.map((key, id) => {\n                                        return (\n                                            <MenuItem key={key.id} value={key.name}>\n                                                <Checkbox\n                                                    checked={this.state.movie !== null ?\n                                                        this.state.movie.categories.indexOf(key.name) > -1 :\n                                                        this.state.categories.indexOf(key.name) > -1}/>\n                                                <ListItemText primary={key.name}/>\n                                            </MenuItem>\n                                        )\n                                    })}\n                                </Select>\n                                {this.state.formErrors.categories !== '' ?\n                                    <p>{this.state.formErrors.categories}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <br/>\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleMovie}\n                                    size=\"large\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default withRouter(FormMovie);\n\n\n","import React, {Component} from \"react\";\nimport Header from \"../../UI/Pages/Header/Header\";\nimport Main from \"../../UI/Pages/Main/Main\";\nimport Pages from \"../../UI/Pages/Pages\";\nimport classes from \"./FormAgent.module.css\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {Button, Snackbar, TextField} from '@material-ui/core';\nimport Moment from \"moment\";\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nclass FormAgent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            formUpdate: props.formUpdate,\n            formCreate: props.formCreate,\n            formErrors: {name: '', joined_in: ''},\n            id: null,\n            name: '',\n            nameValid: false,\n            joined_in: '',\n            joined_inValid: false,\n            agent: {\n                name: '',\n                joined_in: '',\n            },\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match && this.props.match.params.id) {\n            this.setState({\n                nameValid: true,\n                joined_inValid: true,\n                formValid: true,\n                id: this.props.match.params.id\n            })\n            const id = this.props.match.params.id\n            this.getAgent(id)\n        }\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n        let joined_inValid = this.state.joined_inValid;\n\n        switch (fieldName) {\n            case 'name':\n                nameValid = value.length > 0;\n                fieldValidationErrors.name = nameValid ? '' : `Name must not be null`;\n                break;\n            case 'joined_in':\n                joined_inValid = !isNaN(Date.parse(value));\n                fieldValidationErrors.joined_in = joined_inValid ? '' : `Date must be valid`;\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            nameValid: nameValid,\n            joined_inValid: joined_inValid\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState(\n            {formValid: this.state.nameValid && this.state.joined_inValid}\n        );\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState(prevState => ({\n            agent: {\n                ...prevState.agent, [name]: value\n            }\n        }), () => {\n            this.validateField(name, value)\n        })\n    }\n\n    getAgent = (id) => {\n        // permission: 'get:agents'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:agents', payload)\n\n        if (permissions) {\n            fetch(`/agent/${id}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        agent: json.agent\n                    })\n                })\n                .catch((error) => {\n                    alert(`There was an error handling your request\\n${error.message}\\nPlease try again...!`);\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    handleAgent = (ev) => {\n        ev.preventDefault();\n        let method, url, agent, payload, permissions\n        // permission: 'patch:agents' or 'post:agents'\n        let token = sessionStorage.getItem('token')\n        payload = this.props.handleGetPayload(token)\n\n        if (this.props.formUpdate) {\n            agent = this.state.agent\n            method = 'PATCH'\n            url = `/update/agent/${this.state.id}`\n            permissions = this.props.handleCan('patch:agents', payload)\n        } else {\n            const name = document.getElementsByName('name')[0].value\n            const joined_in = document.getElementsByName('joined_in')[0].value\n            method = 'POST'\n            url = '/agent'\n            permissions = this.props.handleCan('post:agents', payload)\n\n            agent = {name, joined_in}\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body: JSON.stringify(\n                {\n                    name: agent.name,\n                    joined_in: agent.joined_in,\n                }\n            )\n        };\n        if (permissions) {\n            fetch(`${url}`, requestOptions)\n                .then((result) => {\n                    if (result.status === 200) {\n                        this.props.history.push('/agents');\n                        return;\n                    }\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.Header}>\n                        {this.props.formCreate ? <h2>Add a New Agent</h2> : <h2>Edit Agent</h2>}\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.FormAgent}>\n                        <form id=\"add-actor-form\">\n                            <label>\n                                Name\n                                <input type=\"text\"\n                                       name=\"name\"\n                                       onChange={this.handleChange}\n                                       value={this.state.agent !== null ? this.state.agent.name : ''}/>\n                                {this.state.formErrors.name !== '' ? <p>{this.state.formErrors.name}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <label>\n                                Joined in\n                                <TextField\n                                    id=\"date\"\n                                    type=\"date\"\n                                    name={'joined_in'}\n                                    onChange={this.handleChange}\n                                    value={this.state.agent !== null ?\n                                        Moment(this.state.agent.joined_in).format('YYYY-MM-DD') :\n                                        Moment(this.state.joined_in).format('YYYY-MM-DD')}\n                                    InputLabelProps={{\n                                        shrink: true,\n                                        display: null\n                                    }}\n                                />\n                            </label>\n                            {this.state.formErrors.joined_in !== '' ? <p>{this.state.formErrors.joined_in}</p> :\n                                <p>&nbsp;</p>}\n                            <p>&nbsp;</p>\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleAgent}\n                                    size=\"large\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </div>\n                </Main>\n            </Pages>\n\n        )\n    }\n\n\n}\n\nexport default withRouter(FormAgent);","import {Component} from 'react'\nimport {Link} from \"react-router-dom\";\nimport Moment from 'moment'\n\nimport classes from \"./Agent.module.css\"\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport class Agent extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {name, joined_in} = this.props;\n        const final_name = name.toString()[0].toUpperCase() +\n            name.toString().substring(1).toLowerCase()\n        return (\n            <tr className={classes.Agent}>\n                <td className={classes.AgentImage}><img\n                    src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?f=y\" alt=\"image\"/></td>\n                <td>{final_name}</td>\n                <td><span className={classes.AgentDate}>{Moment(joined_in).format('DD MMMM YYYY')}</span></td>\n                <td className={classes.Icons}>\n                    <IconButton onClick={this.props.handleDelete} disabled={!this.props.canDelete}>\n                        <a>\n                            <DeleteIcon\n                                color={!this.props.canDelete ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </a>\n                    </IconButton>\n                    <IconButton disabled={!this.props.canEdit}>\n                        <Link to={'edit/agent/' + this.props.editAgent}>\n                            <EditIcon\n                                color={!this.props.canEdit ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </Link>\n                    </IconButton>\n                </td>\n            </tr>\n        )\n    }\n\n}\n\nexport default Agent;","import React, {Component} from 'react'\nimport ReactPaginate from \"react-paginate\"\nimport {Link} from \"react-router-dom\";\nimport {Snackbar} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\nimport Agent from \"./Agent/Agent\";\n\nimport classes from \"./Agents.module.css\"\n\nexport class Agents extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allAgents: [],\n            updateActor: [],\n            currentPage: 1,\n            totalAgents: 0,\n            pageCount: 0,\n            offset: 0,\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getAgents()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.totalAgents !== this.state.totalAgents) {\n            this.getAgents();\n        }\n\n        if (prevProps.user !== this.state.user && this.props.user !== this.state.user) {\n            this.setState({\n                user: this.props.user\n            })\n        }\n\n        if (sessionStorage.getItem('token') !== this.props.token) {\n            sessionStorage.setItem('token', this.props.token)\n        }\n\n        if (prevProps.permissions !== this.state.permissions) {\n            this.setState({\n                permissions: this.props.permissions\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handlePageClick = (data) => {\n        let selected = data.selected;\n        // let offset = Math.ceil(selected * this.props.perPage);\n        let offset = Math.ceil(selected * 10);\n\n        this.setState({offset: offset, currentPage: selected + 1}, () => {\n            this.getAgents();\n        });\n    }\n\n    handleDelete = (id) => {\n        // permission: 'delete:agents'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('delete:agents', payload)\n        if (permissions) {\n            if (window.confirm('are you sure you want to delete the selected Agent?')) {\n                fetch(`${process.env.REACT_APP_API_URI}/agent/${id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                    }\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json();\n                        }\n                    })\n                    .then((json) => {\n                        this.setState({\n                            allAgents: json.agents,\n                            totalAgents: json.total_agents,\n                            pageCount: Math.ceil(json.total_agents / 10)\n                        })\n                        this.handleOpen('success', `Agent ${json.deleted.name} has been deleted.`);\n                    })\n                    .catch((error) => {\n                        console.log(error.message)\n                        this.handleOpen('error', 'An error has occurred.');\n                        return;\n                    })\n            }\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    getAgents = () => {\n        // permission: 'get:agents'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:agents', payload)\n\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/agents?page=${this.state.currentPage}&limit=${10}&offset=${this.state.offset}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allAgents: json.agents,\n                        totalAgents: json.total_agents,\n                        pageCount: Math.ceil(json.total_agents / 10)\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        this.props.handleToken().then((response => {\n            if (sessionStorage.getItem('token') !== response) {\n                sessionStorage.setItem('token', response)\n            }\n        }))\n\n        const payload = this.props.handleGetPayload(sessionStorage.getItem('token'))\n\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.AgentsHeader}>\n                        <h2>Agents\n                            {this.props.handleCan('post:agents', payload) ?\n                                <Link to={\"/new-agent\"} title={'Add an Agent'}>\n                                    &#43;\n                                </Link> :\n                                ''}\n                        </h2>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.AgentsMain}>\n                        <div>\n                            {this.state.totalAgents > 0 ? (\n                                    <table>\n                                        <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>Name</th>\n                                            <th>Joined in</th>\n                                            <th></th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.allAgents.map((key, idx) => (\n                                            <Agent\n                                                key={key.id}\n                                                name={key.name}\n                                                joined_in={key.joined_in}\n                                                editAgent={key.id}\n                                                handleDelete={() => this.handleDelete(key.id)}\n                                                canDelete={this.props.handleCan('delete:agents', payload)}\n                                                canEdit={this.props.handleCan('patch:agents', payload)}\n                                            />\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                ) :\n                                <p>There are no Agents to display</p>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        {this.state.totalAgents > 10 ? <ReactPaginate\n                            previousLabel={'← Previous'}\n                            nextLabel={'Next →'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={classes.Paginate}\n                            previousClassName={classes.PaginateLink}\n                            nextClassName={classes.PaginateLink}\n                            pageClassName={classes.PaginateLink}\n                            disabledClassName={classes.PaginateDisabled}\n                            activeClassName={classes.PaginateActive}\n                        /> : null}\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default Agents;","import React from \"react\";\nimport classes from \"./Loading.module.css\"\n\nconst loadingImg =\n    \"https://cdn.auth0.com/blog/auth0-react-sample/assets/loading.svg\";\n\nclass Loading extends React.Component {\n    render() {\n        return (\n            <div className={classes.Spinner}>\n                <img src={loadingImg} alt=\"Loading...\"/>\n            </div>\n        );\n    }\n}\n\nexport default Loading;","import React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport {withAuthenticationRequired} from \"@auth0/auth0-react\";\nimport Loading from \"../../../hoc/Loading/Loading\";\n\n\nconst ProtectedRoute = ({component, ...args}) => {\n\n    return (\n        <Route\n            component={withAuthenticationRequired(component, {\n                onRedirecting: () => <Loading/>,\n            })}\n            {...args}\n        />\n    )\n}\n\n\nexport default ProtectedRoute;","import React, {Component} from \"react\";\nimport Header from \"../../UI/Pages/Header/Header\";\nimport Main from \"../../UI/Pages/Main/Main\";\nimport Pages from \"../../UI/Pages/Pages\";\nimport classes from \"./FormCategory.module.css\";\nimport {withRouter} from \"react-router-dom\";\n\nimport {Button, Snackbar, TextField} from '@material-ui/core';\nimport Alert from \"@material-ui/lab/Alert\";\n\n\nclass FormCategory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formValid: false,\n            formUpdate: props.formUpdate,\n            formCreate: props.formCreate,\n            formErrors: {name: '', age: '', joined_in: ''},\n            id: null,\n            name: '',\n            nameValid: false,\n            category: {\n                name: '',\n            },\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match && this.props.match.params.id) {\n            this.setState({\n                nameValid: true,\n                id: this.props.match.params.id\n            })\n            const id = this.props.match.params.id\n            this.getCategory(id)\n        }\n    }\n\n    validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let nameValid = this.state.nameValid;\n\n        switch (fieldName) {\n            case 'name':\n                nameValid = value.length > 0;\n                fieldValidationErrors.name = nameValid ? '' : `Name must not be null`;\n                break;\n            default:\n                break;\n        }\n        this.setState({\n            formErrors: fieldValidationErrors,\n            nameValid: nameValid,\n        }, this.validateForm);\n    }\n\n    validateForm() {\n        this.setState(\n            {formValid: this.state.nameValid}\n        );\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState(prevState => ({\n            category: {\n                ...prevState.category, [name]: value\n            }\n        }), () => {\n            this.validateField(name, value)\n        })\n    }\n\n    getCategory = (id) => {\n        // permission: 'patch:category'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('patch:category', payload)\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/category/${id}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json()\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        category: json.category\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    handleCategory = (ev) => {\n        ev.preventDefault();\n        let method, url, category, payload, permissions\n        // permission: 'patch:categories' or 'post:categories'\n        let token = sessionStorage.getItem('token')\n        payload = this.props.handleGetPayload(token)\n\n        if (this.props.formUpdate) {\n            category = this.state.category\n            method = 'PATCH'\n            url = `/update/category/${this.state.id}`\n            permissions = this.props.handleCan('patch:categories', payload)\n        } else {\n            const name = document.getElementsByName('name')[0].value\n            method = 'POST'\n            url = '/category'\n            permissions = this.props.handleCan('post:categories', payload)\n            category = {name}\n        }\n\n        const requestOptions = {\n            method: method,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + sessionStorage.getItem('token')\n            },\n            body: JSON.stringify(\n                {\n                    name: category.name,\n                }\n            )\n        };\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}${url}`, requestOptions)\n                .then((result) => {\n                    if (result.status === 200) {\n                        this.props.history.push('/categories');\n                        return;\n                    }\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.Header}>\n                        {this.props.formCreate ? <h2>Add a New Category</h2> : <h2>Edit Category</h2>}\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.FormCategory}>\n                        <form id=\"add-category-form\">\n                            <label>\n                                Name\n                                <input type=\"text\"\n                                       name=\"name\"\n                                       onChange={this.handleChange}\n                                       value={this.state.category !== null ? this.state.category.name : ''}/>\n                                {this.state.formErrors.name !== '' ? <p>{this.state.formErrors.name}</p> :\n                                    <p>&nbsp;</p>}\n                            </label>\n                            <Button fullWidth variant=\"contained\" color=\"primary\" onClick={this.handleCategory}\n                                    size=\"large\" disabled={!this.state.formValid}>\n                                Submit\n                            </Button>\n                        </form>\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default withRouter(FormCategory);","import {Component} from 'react'\nimport {Link} from \"react-router-dom\";\n\nimport classes from \"./Category.module.css\"\nimport {IconButton} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nexport class Category extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {name} = this.props;\n        const final_name = name.toString()[0].toUpperCase() +\n            name.toString().substring(1).toLowerCase()\n        return (\n            <tr className={classes.Category}>\n                <td>{final_name}</td>\n                <td className={classes.Icons}>\n                    <IconButton onClick={this.props.handleDelete} disabled={!this.props.canDelete}>\n                        <a>\n                            <DeleteIcon\n                                color={!this.props.canDelete ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </a>\n                    </IconButton>\n                    <IconButton disabled={!this.props.canEdit}>\n                        <Link to={'edit/agent/' + this.props.editCategory}>\n                            <EditIcon\n                                color={!this.props.canEdit ? 'disabled' : 'primary'}\n                                fontSize=\"small\"/>\n                        </Link>\n                    </IconButton>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default Category;","import React, {Component} from 'react'\nimport ReactPaginate from \"react-paginate\"\nimport {Link} from \"react-router-dom\";\nimport {Snackbar} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Pages from \"../../Pages\";\nimport Header from \"../../Header/Header\";\nimport Main from \"../../Main/Main\";\nimport Category from \"./Category/Category\";\n\nimport classes from \"./Categories.module.css\"\n\nexport class Categories extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allCategories: [],\n            updateCategory: [],\n            currentPage: 1,\n            totalCategories: 0,\n            pageCount: 0,\n            offset: 0,\n            user: null,\n            permissions: [],\n            open: false,\n            severity: '',\n            severityMessage: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getCategories()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.totalCategories !== this.state.totalCategories) {\n            this.getCategories();\n        }\n\n        if (prevProps.user !== this.state.user && this.props.user !== this.state.user) {\n            this.setState({\n                user: this.props.user\n            })\n        }\n\n        if (sessionStorage.getItem('token') !== this.props.token) {\n            sessionStorage.setItem('token', this.props.token)\n        }\n\n        if (prevProps.permissions !== this.state.permissions) {\n            this.setState({\n                permissions: this.props.permissions\n            })\n        }\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            open: false\n        })\n    };\n\n    handleOpen = (severity, severityMessage) => {\n        this.setState({\n            open: true,\n            severity: severity,\n            severityMessage: severityMessage\n        })\n    }\n\n    handlePageClick = (data) => {\n        let selected = data.selected;\n        // let offset = Math.ceil(selected * this.props.perPage);\n        let offset = Math.ceil(selected * 10);\n\n        this.setState({offset: offset, currentPage: selected + 1}, () => {\n            this.getCategories();\n        });\n    }\n\n    handleDelete = (id) => {\n        // permission: 'delete:categories'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('delete:categories', payload)\n        if (permissions) {\n            if (window.confirm('are you sure you want to delete the selected Category?')) {\n                fetch(`${process.env.REACT_APP_API_URI}/category/${id}`, {\n                    method: 'DELETE',\n                    headers: {\n                        Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                    }\n                })\n                    .then((response) => {\n                        if (response.status === 200) {\n                            return response.json();\n                        }\n                    })\n                    .then((json) => {\n                        this.setState({\n                            allCategories: json.categories,\n                            totalCategories: json.total_categories,\n                            pageCount: Math.ceil(json.total_categories / 10)\n                        })\n                        this.handleOpen('success', `Category ${json.deleted.name} has been deleted.`);\n                    })\n                    .catch((error) => {\n                        console.log(error.message)\n                        this.handleOpen('error', 'An error has occurred.');\n                        return;\n                    })\n            }\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    getCategories = () => {\n        // permission: 'get:categories'\n        let token = sessionStorage.getItem('token')\n        let payload, permissions\n\n        payload = this.props.handleGetPayload(token)\n        permissions = this.props.handleCan('get:categories', payload)\n\n        if (permissions) {\n            fetch(`${process.env.REACT_APP_API_URI}/categories?page=${this.state.currentPage}&limit=${10}&offset=${this.state.offset}`, {\n                method: 'GET',\n                headers: {\n                    Authorization: 'Bearer ' + sessionStorage.getItem('token')\n                }\n            })\n                .then((response) => {\n                    if (response.ok) {\n                        return response.json();\n                    }\n                })\n                .then((json) => {\n                    this.setState({\n                        allCategories: json.categories,\n                        totalCategories: json.total_categories,\n                        pageCount: Math.ceil(json.total_categories / 10)\n                    })\n                })\n                .catch((error) => {\n                    console.log(error.message)\n                    this.handleOpen('error', 'An error has occurred.');\n                    return;\n                })\n        } else {\n            this.handleOpen('error', 'An error has occurred.');\n        }\n    }\n\n    render() {\n        this.props.handleToken().then((response => {\n            if (sessionStorage.getItem('token') !== response) {\n                sessionStorage.setItem('token', response)\n            }\n        }))\n\n        const payload = this.props.handleGetPayload(sessionStorage.getItem('token'))\n\n        return (\n            <Pages>\n                <div>\n                    <Snackbar open={this.state.open} autoHideDuration={3000} onClose={this.handleClose}>\n                        <Alert variant=\"filled\" onClose={this.handleClose} severity={this.state.severity}>\n                            {this.state.severityMessage}\n                        </Alert>\n                    </Snackbar>\n                </div>\n                <Header>\n                    <div className={classes.CategoriesHeader}>\n                        <h2>Categories\n                            {this.props.handleCan('post:categories', payload) ?\n                                <Link to={\"/new-category\"} title={'Add a Category'}>\n                                    &#43;\n                                </Link> :\n                                ''}\n                        </h2>\n                    </div>\n                </Header>\n                <Main>\n                    <div className={classes.CategoriesMain}>\n                        <div>\n                            {this.state.totalCategories > 0 ? (\n                                    <table>\n                                        <thead>\n                                        <tr>\n                                            <th></th>\n                                            <th>Name</th>\n                                            <th></th>\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {this.state.allCategories.map((key, idx) => (\n                                            <Category\n                                                key={key.id}\n                                                name={key.name}\n                                                editCategory={key.id}\n                                                handleDelete={() => this.handleDelete(key.id)}\n                                                canDelete={this.props.handleCan('delete:categories', payload)}\n                                                canEdit={this.props.handleCan('patch:categories', payload)}\n                                            />\n                                        ))}\n                                        </tbody>\n                                    </table>\n                                ) :\n                                <p>There are no Categories to display</p>\n                            }\n                        </div>\n                    </div>\n                    <div>\n                        {this.state.totalCategories > 10 ? <ReactPaginate\n                            previousLabel={'← Previous'}\n                            nextLabel={'Next →'}\n                            breakLabel={'...'}\n                            breakClassName={'break-me'}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={classes.Paginate}\n                            previousClassName={classes.PaginateLink}\n                            nextClassName={classes.PaginateLink}\n                            pageClassName={classes.PaginateLink}\n                            disabledClassName={classes.PaginateDisabled}\n                            activeClassName={classes.PaginateActive}\n                        /> : null}\n                    </div>\n                </Main>\n            </Pages>\n        )\n    }\n}\n\nexport default Categories;","import {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from 'react-router-dom'\n\nimport {Component} from \"react\";\nimport {withAuth0} from '@auth0/auth0-react';\nimport jwtDecode from \"jwt-decode\";\n\nimport Toolbar from \"./components/UI/Navigation/Toolbar/Toolbar\";\nimport Auxiliary from \"./hoc/Auxiliary/Auxiliary\";\nimport Homepage from \"./components/UI/Pages/Content/Homepage/Homepage\";\nimport Actors from \"./components/UI/Pages/Content/Actors/Actors\";\nimport Movies from \"./components/UI/Pages/Content/Movies/Movies\";\nimport About from \"./components/UI/Pages/Content/About/About\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport FormActor from \"./components/Forms/FormActors/FormActor\";\nimport FormMovie from \"./components/Forms/FormMovies/FormMovie\";\nimport FormAgent from \"./components/Forms/FormAgents/FormAgent\";\nimport Agents from \"./components/UI/Pages/Content/Agents/Agents\";\nimport Loading from \"./hoc/Loading/Loading\";\nimport ProtectedRoute from \"./components/Auth/ProtectedRoute/ProtectedRoute\";\nimport FormCategory from \"./components/Forms/FormCategories/FormCategory\";\nimport {Categories} from \"./components/UI/Pages/Content/Categories/Categories\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            permissions: [],\n            token: null,\n            user: null\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {user, isAuthenticated} = this.props.auth0\n\n        if (isAuthenticated) {\n            if (prevProps.auth0.user !== user) {\n                let payload\n                this.handleGetToken().then((response => {\n                    payload = this.handleGetPayload(response)\n\n                    this.setState({\n                        user: user,\n                        permissions: payload.permissions\n                    })\n                }))\n            }\n        }\n    }\n\n    handleGetToken = async () => {\n        const {getAccessTokenSilently} = this.props.auth0;\n        const token = await getAccessTokenSilently();\n\n        if (token !== sessionStorage.getItem('token') && token !== this.state.token) {\n            sessionStorage.setItem('token', token)\n            this.setState({\n                token: token\n            })\n        }\n        return token;\n    }\n\n    handleGetPayload = (token) => {\n        return jwtDecode(token)\n    }\n\n    handleCan = (permission, payload) => {\n        return payload && payload.permissions && payload.permissions.length\n            && payload.permissions.indexOf(permission) >= 0;\n    }\n\n\n    render() {\n        const {isLoading, isAuthenticated} = this.props.auth0;\n\n        if (isLoading) {\n            return <Loading/>;\n        }\n\n        if (isAuthenticated) {\n            const token = this.handleGetToken()\n        }\n\n        return (\n            <Auxiliary>\n                <Router>\n                    <Layout>\n                        <Toolbar/>\n                        <Switch>\n                            <Route path=\"/\"\n                                   exact\n                                   component={(props) => <Homepage/>}/>\n                            <ProtectedRoute path=\"/actors\"\n                                            component={(props) => <Actors {...props}\n                                                                          user={this.state.user}\n                                                                          permissions={this.state.permissions}\n                                                                          token={this.state.token}\n                                                                          handleToken={this.handleGetToken}\n                                                                          handleGetPayload={this.handleGetPayload}\n                                                                          handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/agents\"\n                                            component={(props) => <Agents {...props}\n                                                                          user={this.state.user}\n                                                                          permissions={this.state.permissions}\n                                                                          token={this.state.token}\n                                                                          handleToken={this.handleGetToken}\n                                                                          handleGetPayload={this.handleGetPayload}\n                                                                          handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/categories\"\n                                            component={(props) => <Categories {...props}\n                                                                              user={this.state.user}\n                                                                              permissions={this.state.permissions}\n                                                                              token={this.state.token}\n                                                                              handleToken={this.handleGetToken}\n                                                                              handleGetPayload={this.handleGetPayload}\n                                                                              handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/movies\"\n                                            component={(props) => <Movies {...props}\n                                                                          user={this.state.user}\n                                                                          permissions={this.state.permissions}\n                                                                          token={this.state.token}\n                                                                          handleToken={this.handleGetToken}\n                                                                          handleGetPayload={this.handleGetPayload}\n                                                                          handleCan={this.handleCan}/>}/>\n\n                            <ProtectedRoute path=\"/new-actor\"\n                                            component={(props) => <FormActor {...props}\n                                                                             formCreate\n                                                                             formUpdate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute exact path=\"/edit/actor/:id\"\n                                            component={(props) => <FormActor {...props}\n                                                                             formUpdate\n                                                                             formCreate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/new-movie\"\n                                            component={(props) => <FormMovie {...props}\n                                                                             formCreate\n                                                                             formUpdate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute exact path=\"/edit/movie/:id\"\n                                            component={(props) => <FormMovie {...props}\n                                                                             formUpdate\n                                                                             formCreate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/new-agent\"\n                                            component={(props) => <FormAgent {...props}\n                                                                             formCreate\n                                                                             formUpdate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute exact path=\"/edit/agent/:id\"\n                                            component={(props) => <FormAgent {...props}\n                                                                             formUpdate\n                                                                             formCreate={false}\n                                                                             user={this.state.user}\n                                                                             permissions={this.state.permissions}\n                                                                             token={this.state.token}\n                                                                             handleToken={this.handleGetToken}\n                                                                             handleGetPayload={this.handleGetPayload}\n                                                                             handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute path=\"/new-category\"\n                                            component={(props) => <FormCategory {...props}\n                                                                                formCreate\n                                                                                formUpdate={false}\n                                                                                user={this.state.user}\n                                                                                permissions={this.state.permissions}\n                                                                                token={this.state.token}\n                                                                                handleToken={this.handleGetToken}\n                                                                                handleGetPayload={this.handleGetPayload}\n                                                                                handleCan={this.handleCan}/>}/>\n                            <ProtectedRoute exact path=\"/edit/category/:id\"\n                                            component={(props) => <FormCategory {...props}\n                                                                                formUpdate\n                                                                                formCreate={false}\n                                                                                user={this.state.user}\n                                                                                permissions={this.state.permissions}\n                                                                                token={this.state.token}\n                                                                                handleToken={this.handleGetToken}\n                                                                                handleGetPayload={this.handleGetPayload}\n                                                                                handleCan={this.handleCan}/>}/>\n                            <Route path=\"/about\"\n                                   component={(props) => <About/>}/>\n                            <Route render={() => <Redirect to={{pathname: \"/\"}} />} />\n                        </Switch>\n                    </Layout>\n                </Router>\n            </Auxiliary>\n        );\n    }\n}\n\nexport default withAuth0(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Auth0Provider} from \"@auth0/auth0-react\";\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Auth0Provider\n        domain=\"ferreiratech.eu.auth0.com\"\n        clientId=\"4dNGxe7ibww71BoxWxeh1qjTD7Eb2FNV\"\n        redirectUri={window.location.origin}\n        audience={\"ferreiratech\"}>\n        <App/>\n    </Auth0Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1vqbg\",\"active\":\"NavigationItem_active__27LpL\",\"Menu\":\"NavigationItem_Menu__dEADo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actors\":\"Actors_Actors__1o-zV\",\"ActorsHeader\":\"Actors_ActorsHeader__2royM\",\"ActorsMain\":\"Actors_ActorsMain__294ym\",\"Paginate\":\"Actors_Paginate__NSprj\",\"PaginateLink\":\"Actors_PaginateLink__1UaPq\",\"PaginateDisabled\":\"Actors_PaginateDisabled__24phF\",\"PaginateActive\":\"Actors_PaginateActive__3RqaZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movie\":\"Movie_Movie__28FKy\",\"MovieImage\":\"Movie_MovieImage__1b3uc\",\"MovieYear\":\"Movie_MovieYear__1PvPA\",\"MovieTitle\":\"Movie_MovieTitle__227Rw\",\"MovieRating\":\"Movie_MovieRating__3Jelf\",\"MovieSpan\":\"Movie_MovieSpan__2wBih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Movies\":\"Movies_Movies__1TpUR\",\"MoviesHeader\":\"Movies_MoviesHeader__1r6xA\",\"MoviesMain\":\"Movies_MoviesMain__WF5Xd\",\"Paginate\":\"Movies_Paginate__6vbdg\",\"PaginateLink\":\"Movies_PaginateLink__cLyqu\",\"PaginateDisabled\":\"Movies_PaginateDisabled__GU4Ws\",\"PaginateActive\":\"Movies_PaginateActive__2zyCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Agents\":\"Agents_Agents__1h503\",\"AgentsHeader\":\"Agents_AgentsHeader__3dyeL\",\"AgentsMain\":\"Agents_AgentsMain__z6Mz9\",\"Paginate\":\"Agents_Paginate__leZtD\",\"PaginateLink\":\"Agents_PaginateLink__1wJ_A\",\"PaginateDisabled\":\"Agents_PaginateDisabled__3cNRa\",\"PaginateActive\":\"Agents_PaginateActive__1W0qm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Categories\":\"Categories_Categories__FXxBO\",\"CategoriesHeader\":\"Categories_CategoriesHeader__31aZs\",\"CategoriesMain\":\"Categories_CategoriesMain__kC7QT\",\"Paginate\":\"Categories_Paginate__35QqX\",\"PaginateLink\":\"Categories_PaginateLink__hhOQo\",\"PaginateDisabled\":\"Categories_PaginateDisabled__2F3_R\",\"PaginateActive\":\"Categories_PaginateActive__3QVpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3A13T\",\"Menu\":\"NavigationItems_Menu__3yGEx\",\"active\":\"NavigationItems_active__29_Tj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actor\":\"Actor_Actor__3g3Yo\",\"ActorImage\":\"Actor_ActorImage__38cq8\",\"ActorDate\":\"Actor_ActorDate__1O03E\",\"ActorAgent\":\"Actor_ActorAgent__Oy14k\",\"Icons\":\"Actor_Icons__3umCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AboutHeader\":\"About_AboutHeader__2pap4\",\"AboutMain\":\"About_AboutMain__1uvAe\",\"AboutImg\":\"About_AboutImg__PN1o0\",\"AboutInfo\":\"About_AboutInfo__3j37c\",\"AboutBeer\":\"About_AboutBeer__1HP3Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Agent\":\"Agent_Agent__6h66Y\",\"AgentImage\":\"Agent_AgentImage__3BiEh\",\"AgentDate\":\"Agent_AgentDate__2G3n0\",\"Icons\":\"Agent_Icons__2A-ZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Homepage\":\"Homepage_Homepage__1dKJE\",\"HomepageHeader\":\"Homepage_HomepageHeader__1lq4W\",\"HomepageMain\":\"Homepage_HomepageMain__3bdUu\",\"Beer\":\"Homepage_Beer____uAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormMovie\":\"FormMovie_FormMovie__27RSN\",\"Header\":\"FormMovie_Header__3eCaL\",\"Btn\":\"FormMovie_Btn__1P3Om\",\"Selected\":\"FormMovie_Selected__3M4f2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__P0Id5\",\"Logo\":\"Toolbar_Logo__Rub9j\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1nBgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormActor\":\"FormActor_FormActor__1-f0_\",\"Header\":\"FormActor_Header__cqOaB\",\"Btn\":\"FormActor_Btn__35Gro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormAgent\":\"FormAgent_FormAgent__1z63Y\",\"Header\":\"FormAgent_Header__b9_WG\",\"Btn\":\"FormAgent_Btn__3LZI-\",\"Selected\":\"FormAgent_Selected__3piwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormCategory\":\"FormCategory_FormCategory__lgW91\",\"Header\":\"FormCategory_Header__3EYDN\",\"FormActor\":\"FormCategory_FormActor__1XgmG\",\"Btn\":\"FormCategory_Btn__22wSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Category\":\"Category_Category__2zsej\",\"CategoryImage\":\"Category_CategoryImage__3BnFk\",\"CategoryDate\":\"Category_CategoryDate__2TL2K\",\"Icons\":\"Category_Icons__DVVQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1cPeT\",\"active\":\"Logo_active__33LpA\"};"],"sourceRoot":""}